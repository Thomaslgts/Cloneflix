{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Cloneflix/src/components/Discover/discover.jsx\",\n  _s = $RefreshSig$();\nimport { type } from \"@testing-library/user-event/dist/type\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from \"../../API/getFilterMovie\";\nimport { getFilterTV } from \"../../API/getFilterTv\";\nimport { getDiscoverMovie } from \"../../store/film/discoverSlice\";\nimport { getDiscoverTV } from \"../../store/serie/discoverSlice\";\nimport './discover.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Discover() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    discoverFilm\n  } = useSelector(state => state);\n  const {\n    discoverTV\n  } = useSelector(state => state);\n  const {\n    genreMovie\n  } = useSelector(state => state);\n  const {\n    genreTv\n  } = useSelector(state => state);\n  const [stateDiscoverFilm, setDiscoverFilm] = useState([]);\n  const [stateDiscoverTV, setDiscoverTV] = useState([]);\n  const [allTypeOrFilter, setAllTypeOrFilter] = useState([]);\n  const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n\n  //Variables pour les filtres\n  const [filmOrTv, setFilmOrTv] = useState([]);\n  const [activeGenre, setActiveGenre] = useState(0);\n  const [storeFilter, setStoreFilter] = useState([]);\n  useEffect(() => {\n    dispatch(getDiscoverMovie());\n    dispatch(getDiscoverTV());\n    dispatch(getFilter());\n    dispatch(getFilterTV());\n  }, []);\n  useEffect(() => {\n    if (discoverFilm.isSuccess & discoverTV.isSuccess) {\n      setDiscoverFilm(discoverFilm.data.results);\n      setDiscoverTV(discoverTV.data.results);\n      setAllTypeOrFilter([].concat(stateDiscoverFilm, stateDiscoverTV));\n    }\n  }, [discoverFilm]);\n  useEffect(() => {\n    console.log(storeFilter);\n    if (activeGenre === 0) {\n      setAllTypeOrFilter(allTypeOrFilter);\n    } else if (storeFilter === \"film\") {\n      setAllTypeOrFilter(stateDiscoverFilm);\n      setFilmOrTv(genreMovie.data.genres);\n    } else {\n      setAllTypeOrFilter(stateDiscoverFilm.filter(movie => movie.genre_ids.includes(activeGenre)));\n    }\n  }, [storeFilter]);\n\n  //Configuration des checkbox Filtre\n  function handleClick(e) {\n    if (e.target.value === \"film\") {\n      setStoreFilter(e.target.value);\n    } else if (e.target.value === \"tv\") {\n      setStoreFilter(e.target.value);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"discoverContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainFilterBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        value: \"film\",\n        id: \"0\",\n        onClick: handleClick,\n        children: \"Film\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        value: \"tv\",\n        id: \"0\",\n        onClick: handleClick,\n        children: \"S\\xE9rie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FilterBox\",\n        children: filmOrTv.map((e, i) => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            id: e.id,\n            onClick: handleClick,\n            children: e.name\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiscoverFilm\",\n      children: allTypeOrFilter.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DiscoverCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [e.title, \" \", e.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgUrl + e.poster_path,\n            alt: \"Movie Poster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(Discover, \"GJ1eemklmlaGH5d36lIh1kpuqFY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Discover;\nexport default Discover;\nvar _c;\n$RefreshReg$(_c, \"Discover\");","map":{"version":3,"names":["type","React","useEffect","useState","useDispatch","useSelector","getFilter","getFilterTV","getDiscoverMovie","getDiscoverTV","Discover","dispatch","discoverFilm","state","discoverTV","genreMovie","genreTv","stateDiscoverFilm","setDiscoverFilm","stateDiscoverTV","setDiscoverTV","allTypeOrFilter","setAllTypeOrFilter","imgUrl","filmOrTv","setFilmOrTv","activeGenre","setActiveGenre","storeFilter","setStoreFilter","isSuccess","data","results","concat","console","log","genres","filter","movie","genre_ids","includes","handleClick","e","target","value","map","i","id","name","title","poster_path"],"sources":["/Applications/MAMP/htdocs/Cloneflix/src/components/Discover/discover.jsx"],"sourcesContent":["import { type } from \"@testing-library/user-event/dist/type\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from \"../../API/getFilterMovie\";\nimport { getFilterTV } from \"../../API/getFilterTv\";\nimport { getDiscoverMovie } from \"../../store/film/discoverSlice\";\nimport { getDiscoverTV } from \"../../store/serie/discoverSlice\";\nimport './discover.css';\n\nfunction Discover() {\n    const dispatch = useDispatch();\n    const { discoverFilm } = useSelector((state) => state);\n    const { discoverTV } = useSelector((state) => state);\n    const { genreMovie } = useSelector((state) => state);\n    const { genreTv } = useSelector((state) => state);\n    const [stateDiscoverFilm, setDiscoverFilm] = useState([]);\n    const [stateDiscoverTV, setDiscoverTV] = useState([]);\n    const [allTypeOrFilter, setAllTypeOrFilter] = useState([])\n    const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n\n    //Variables pour les filtres\n    const [filmOrTv, setFilmOrTv] = useState([]);\n    const [activeGenre, setActiveGenre] = useState(0);\n    const [storeFilter, setStoreFilter] = useState([])\n\n    useEffect(() => {\n        dispatch(getDiscoverMovie());\n        dispatch(getDiscoverTV());\n        dispatch(getFilter());\n        dispatch(getFilterTV())\n    }, [])\n\n    useEffect(() => {\n        if (discoverFilm.isSuccess & discoverTV.isSuccess) {\n            setDiscoverFilm(discoverFilm.data.results);\n            setDiscoverTV(discoverTV.data.results)\n            setAllTypeOrFilter([].concat(stateDiscoverFilm, stateDiscoverTV));\n        }\n    }, [discoverFilm])\n\n    useEffect(() => {\n        console.log(storeFilter)\n        if (activeGenre === 0) {\n            setAllTypeOrFilter(allTypeOrFilter)\n        } else if (storeFilter === \"film\") {\n            setAllTypeOrFilter(stateDiscoverFilm);\n            setFilmOrTv(genreMovie.data.genres)\n        }\n        else {\n            setAllTypeOrFilter(stateDiscoverFilm.filter((movie) => (movie.genre_ids.includes(activeGenre))))\n        }\n    }, [storeFilter])\n\n    //Configuration des checkbox Filtre\n    function handleClick(e) {\n        if (e.target.value === \"film\") {\n            setStoreFilter(e.target.value)\n        } else if (e.target.value === \"tv\") {\n            setStoreFilter(e.target.value)\n        }\n    }\n\n    return (\n        <div className=\"discoverContainer\">\n            <div className=\"mainFilterBox\">\n                <button value=\"film\" id=\"0\" onClick={handleClick}>Film</button>\n                <button value=\"tv\" id=\"0\" onClick={handleClick}>SÃ©rie</button>\n                <div className=\"FilterBox\">\n                    {filmOrTv.map((e, i) => {\n                        return (\n                            <button key={i} id={e.id} onClick={handleClick}>{e.name}</button>\n                        )\n                    })}\n                </div>\n            </div>\n            <div className=\"DiscoverFilm\">\n                {allTypeOrFilter.map((e, i) => {\n                    return (\n                        <div key={i} className=\"DiscoverCard\">\n                            <h2>{e.title} {e.name}</h2>\n                            <img src={imgUrl + e.poster_path} alt=\"Movie Poster\" />\n                        </div>\n                    )\n                })}\n            </div>\n        </div >\n    )\n}\n\nexport default Discover"],"mappings":"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"},"metadata":{},"sourceType":"module"}