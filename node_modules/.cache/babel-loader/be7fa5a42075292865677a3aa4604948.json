{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Cloneflix/src/components/Discover/discover.jsx\",\n  _s = $RefreshSig$();\nimport { type } from \"@testing-library/user-event/dist/type\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from \"../../API/getFilterMovie\";\nimport { getFilterTV } from \"../../API/getFilterTv\";\nimport { getDiscoverMovie } from \"../../store/film/discoverSlice\";\nimport { getDiscoverTV } from \"../../store/serie/discoverSlice\";\nimport './discover.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Discover() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    discoverFilm\n  } = useSelector(state => state);\n  const {\n    discoverTV\n  } = useSelector(state => state);\n  const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    dispatch(getDiscoverMovie());\n    dispatch(getDiscoverTV());\n  }, []);\n  useEffect(() => {\n    if (discoverFilm.isSuccess && discoverTV.isSuccess && data.length <= 0) {\n      let array = [].concat(discoverFilm.data.results, discoverTV.data.results);\n      setData(array);\n    }\n  }, [discoverFilm, discoverTV]);\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n\n  //Configuration des checkbox Filtre\n  function handleClick(e) {\n    if (e.target.value === \"film\") {\n      setData(data => data.filter(allData => allData.includes(\"title\")));\n    } else if (e.target.value === \"tv\") {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"discoverContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainFilterBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        value: \"film\",\n        onClick: handleClick,\n        children: \"Film\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        value: \"tv\",\n        onClick: handleClick,\n        children: \"S\\xE9rie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FilterBox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiscoverFilm\",\n      children: filter.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DiscoverCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [e.title, \" \", e.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgUrl + e.poster_path,\n            alt: \"Movie Poster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(Discover, \"TzXzGxL0Aui8iF50qRvdUWuubdg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Discover;\nexport default Discover;\nvar _c;\n$RefreshReg$(_c, \"Discover\");","map":{"version":3,"names":["type","React","useEffect","useState","useDispatch","useSelector","getFilter","getFilterTV","getDiscoverMovie","getDiscoverTV","Discover","dispatch","discoverFilm","state","discoverTV","imgUrl","data","setData","isSuccess","length","array","concat","results","console","log","handleClick","e","target","value","filter","allData","includes","map","i","title","name","poster_path"],"sources":["/Applications/MAMP/htdocs/Cloneflix/src/components/Discover/discover.jsx"],"sourcesContent":["import { type } from \"@testing-library/user-event/dist/type\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from \"../../API/getFilterMovie\";\nimport { getFilterTV } from \"../../API/getFilterTv\";\nimport { getDiscoverMovie } from \"../../store/film/discoverSlice\";\nimport { getDiscoverTV } from \"../../store/serie/discoverSlice\";\nimport './discover.css';\n\nfunction Discover() {\n    const dispatch = useDispatch();\n    const { discoverFilm } = useSelector((state) => state);\n    const { discoverTV } = useSelector((state) => state);\n    const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        dispatch(getDiscoverMovie());\n        dispatch(getDiscoverTV());\n    }, [])\n\n    useEffect(() => {\n        if (discoverFilm.isSuccess && discoverTV.isSuccess && data.length <= 0) {\n            let array = [].concat(discoverFilm.data.results, discoverTV.data.results)\n            setData(array)\n        }\n    }, [discoverFilm, discoverTV])\n\n    useEffect(() => {\n        console.log(data)\n    }, [data])\n\n    //Configuration des checkbox Filtre\n    function handleClick(e) {\n        if (e.target.value === \"film\") {\n            setData(data => data.filter((allData) => (allData.includes(\"title\"))))\n        } else if (e.target.value === \"tv\") {\n\n        }\n    }\n\n    return (\n        <div className=\"discoverContainer\">\n            <div className=\"mainFilterBox\">\n                <button value=\"film\" onClick={handleClick}>Film</button>\n                <button value=\"tv\" onClick={handleClick}>SÃ©rie</button>\n                <div className=\"FilterBox\">\n                    {/* {filmOrTv.map((e, i) => {\n                        return (\n                            <button key={i} id={e.id} onClick={handleClick}>{e.name}</button>\n                        )\n                    })} */}\n                </div>\n            </div>\n            <div className=\"DiscoverFilm\">\n                {filter.map((e, i) => {\n                    return (\n                        <div key={i} className=\"DiscoverCard\">\n                            <h2>{e.title} {e.name}</h2>\n                            <img src={imgUrl + e.poster_path} alt=\"Movie Poster\" />\n                        </div>\n                    )\n                })}\n            </div>\n        </div >\n    )\n}\n\nexport default Discover"],"mappings":"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"},"metadata":{},"sourceType":"module"}