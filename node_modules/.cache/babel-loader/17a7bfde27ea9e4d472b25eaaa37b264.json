{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Cloneflix/src/components/Discover/discover.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDiscoverMovie } from \"../../store/film/discoverSlice\";\nimport { getDiscoverTV } from \"../../store/serie/discoverSlice\";\nimport './discover.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Discover() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    discoverFilm\n  } = useSelector(state => state);\n  const {\n    discoverTV\n  } = useSelector(state => state);\n  useEffect(() => {\n    dispatch(getDiscoverMovie());\n    dispatch(getDiscoverTV());\n  });\n  useEffect(() => {\n    if (discoverFilm.isSuccess & discoverTV.isSuccess) {}\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"discoverContainer\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(Discover, \"rQ3pTr9r7+tLPDO/J9veMmWapME=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Discover;\nexport default Discover;\nvar _c;\n$RefreshReg$(_c, \"Discover\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","getDiscoverMovie","getDiscoverTV","Discover","dispatch","discoverFilm","state","discoverTV","isSuccess"],"sources":["/Applications/MAMP/htdocs/Cloneflix/src/components/Discover/discover.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDiscoverMovie } from \"../../store/film/discoverSlice\";\nimport { getDiscoverTV } from \"../../store/serie/discoverSlice\";\nimport './discover.css';\n\nfunction Discover() {\n    const dispatch = useDispatch();\n    const { discoverFilm } = useSelector((state) => state)\n    const { discoverTV } = useSelector((state) => state)\n\n    useEffect(() => {\n        dispatch(getDiscoverMovie());\n        dispatch(getDiscoverTV());\n    })\n\n    useEffect(() => {\n        if (discoverFilm.isSuccess & discoverTV.isSuccess) {\n        }\n    })\n\n    return (\n        <div className=\"discoverContainer\">\n        </div >\n    )\n}\n\nexport default Discover"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,OAAO,gBAAgB;AAAC;AAExB,SAASC,QAAQ,GAAG;EAAA;EAChB,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAM;IAAEM;EAAa,CAAC,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAAC;EACtD,MAAM;IAAEC;EAAW,CAAC,GAAGP,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAAC;EAEpDT,SAAS,CAAC,MAAM;IACZO,QAAQ,CAACH,gBAAgB,EAAE,CAAC;IAC5BG,QAAQ,CAACF,aAAa,EAAE,CAAC;EAC7B,CAAC,CAAC;EAEFL,SAAS,CAAC,MAAM;IACZ,IAAIQ,YAAY,CAACG,SAAS,GAAGD,UAAU,CAACC,SAAS,EAAE,CACnD;EACJ,CAAC,CAAC;EAEF,oBACI;IAAK,SAAS,EAAC;EAAmB;IAAA;IAAA;IAAA;EAAA,QAC3B;AAEf;AAAC,GAnBQL,QAAQ;EAAA,QACIJ,WAAW,EACHC,WAAW,EACbA,WAAW;AAAA;AAAA,KAH7BG,QAAQ;AAqBjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}