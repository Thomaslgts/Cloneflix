{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Cloneflix/src/components/ListSerie/listSerie.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './listSerie.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDiscoverMovie } from \"../../store/film/discoverSlice\";\nimport { getFilter } from \"../../API/getFilterMovie\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListSerie() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    discoverFilm\n  } = useSelector(state => state);\n  const {\n    genre\n  } = useSelector(state => state);\n  const [stateDiscoverFilm, setDiscoverFilm] = useState([]);\n  const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n\n  //Variables pour les filtres\n  const [activeGenre, setActiveGenre] = useState(0);\n  const [stateActiveFilter, setActiveFilter] = useState([]);\n  const [filter, setFilter] = useState([]);\n\n  // Dispatch Movie et Serie\n  useEffect(() => {\n    dispatch(getDiscoverMovie());\n    dispatch(getFilter());\n  }, []);\n\n  // On vérifie que les données de l'API on été transmise\n  useEffect(() => {\n    if (discoverFilm.isSuccess) {\n      setDiscoverFilm(discoverFilm.data.results);\n      setFilter(discoverFilm.data.results);\n    }\n  }, [discoverFilm]);\n  useEffect(() => {\n    if (genre.isSuccess) {\n      setActiveFilter(genre.data.genres);\n    }\n  }, [genre]);\n  useEffect(() => {\n    if (activeGenre === 0) {\n      setFilter(stateDiscoverFilm);\n      return;\n    } else {\n      setFilter(stateDiscoverFilm.filter(movie => movie.genre_ids.includes(activeGenre)));\n    }\n  }, [activeGenre]);\n\n  //Configuration des checkbox Filtre\n  function handleClick(e) {\n    setActiveGenre(Number(e.target.id));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"discoverContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      animate: {\n        y: 100\n      },\n      className: \"FilterBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"0\",\n        onClick: handleClick,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), stateActiveFilter.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          id: e.id,\n          onClick: handleClick,\n          children: e.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"film\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DiscoverFilm\",\n        children: filter.map((e, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"DiscoverCard\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: e.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imgUrl + e.poster_path,\n              alt: \"Movie Poster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(ListSerie, \"qYpEZpDIyrBbZ/xZW8+mEnUivvc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = ListSerie;\nexport default ListSerie;\nvar _c;\n$RefreshReg$(_c, \"ListSerie\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","getDiscoverMovie","getFilter","motion","ListSerie","dispatch","discoverFilm","state","genre","stateDiscoverFilm","setDiscoverFilm","imgUrl","activeGenre","setActiveGenre","stateActiveFilter","setActiveFilter","filter","setFilter","isSuccess","data","results","genres","movie","genre_ids","includes","handleClick","e","Number","target","id","y","map","i","name","title","poster_path"],"sources":["/Applications/MAMP/htdocs/Cloneflix/src/components/ListSerie/listSerie.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './listSerie.css'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDiscoverMovie } from \"../../store/film/discoverSlice\";\nimport { getFilter } from \"../../API/getFilterMovie\";\nimport { motion } from \"framer-motion\";\n\nfunction ListSerie() {\n    const dispatch = useDispatch();\n    const { discoverFilm } = useSelector((state) => state)\n    const { genre } = useSelector((state) => state);\n    const [stateDiscoverFilm, setDiscoverFilm] = useState([]);\n    const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n\n    //Variables pour les filtres\n    const [activeGenre, setActiveGenre] = useState(0);\n    const [stateActiveFilter, setActiveFilter] = useState([]);\n    const [filter, setFilter] = useState([]);\n\n    // Dispatch Movie et Serie\n    useEffect(() => {\n        dispatch(getDiscoverMovie())\n        dispatch(getFilter())\n    }, []);\n\n    // On vérifie que les données de l'API on été transmise\n    useEffect(() => {\n        if (discoverFilm.isSuccess) {\n            setDiscoverFilm(discoverFilm.data.results)\n            setFilter(discoverFilm.data.results)\n        }\n    }, [discoverFilm])\n\n    useEffect(() => {\n        if (genre.isSuccess) {\n            setActiveFilter(genre.data.genres);\n        }\n    }, [genre])\n\n    useEffect(() => {\n        if (activeGenre === 0) {\n            setFilter(stateDiscoverFilm)\n            return;\n        } else {\n            setFilter(stateDiscoverFilm.filter((movie) => (movie.genre_ids.includes(activeGenre))))\n        }\n    }, [activeGenre])\n\n    //Configuration des checkbox Filtre\n    function handleClick(e) {\n        setActiveGenre(Number(e.target.id));\n    }\n\n    return (\n        <div className=\"discoverContainer\">\n            <div animate={{ y: 100 }} className=\"FilterBox\">\n                <button id=\"0\" onClick={handleClick}>All</button>\n                {stateActiveFilter.map((e, i) => {\n                    return (\n                        <button key={i} id={e.id} onClick={handleClick}>{e.name}</button>\n                    )\n                })}\n            </div>\n            <h1>film</h1>\n            <a href=\"\">\n                <div className=\"DiscoverFilm\" >\n                    {filter.map((e, i) => {\n                        return (\n                            <div key={i} className=\"DiscoverCard\">\n                                <h2>{e.title}</h2>\n                                <img src={imgUrl + e.poster_path} alt=\"Movie Poster\" />\n                            </div>\n                        )\n                    })}\n                </div >\n            </a>\n        </div >\n    )\n}\n\nexport default ListSerie\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}