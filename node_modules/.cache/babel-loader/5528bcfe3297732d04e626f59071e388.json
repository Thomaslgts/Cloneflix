{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Cloneflix/src/components/Discover/discover.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from \"../../API/getFilterMovie\";\nimport { getFilterTV } from \"../../API/getFilterTv\";\nimport { getDiscoverMovie } from \"../../store/film/discoverSlice\";\nimport { getDiscoverTV } from \"../../store/serie/discoverSlice\";\nimport './discover.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Discover() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    discoverFilm\n  } = useSelector(state => state);\n  const {\n    discoverTV\n  } = useSelector(state => state);\n  const [stateDiscoverFilm, setDiscoverFilm] = useState([]);\n  const [stateDiscoverTV, setDiscoverTV] = useState([]);\n  const [allType, setAllType] = useState([]);\n  const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n\n  //Variables pour les filtres\n  const [filmOrTv, setFilmOrTv] = useState([]);\n  const [activeGenre, setActiveGenre] = useState(0);\n  const [stateActiveFilter, setActiveFilter] = useState([]);\n  useEffect(() => {\n    dispatch(getDiscoverMovie());\n    dispatch(getDiscoverTV());\n    dispatch(getFilter());\n    dispatch(getFilterTV());\n  }, []);\n  useEffect(() => {\n    if (discoverFilm.isSuccess & discoverTV.isSuccess) {\n      setDiscoverFilm(discoverFilm.data.results);\n      setDiscoverTV(discoverTV.data.results);\n      const concat = [].concat(stateDiscoverFilm, stateDiscoverTV);\n      setAllType(concat);\n    }\n  }, [discoverFilm, discoverTV]);\n\n  //Configuration des checkbox Filtre\n  function handleClick(e) {\n    if (e.target.id === \"film\") {\n      setFilmOrTv();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"discoverContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FilterBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"film\",\n        onClick: handleClick,\n        children: \"Film\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"tv\",\n        onClick: handleClick,\n        children: \"S\\xE9rie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiscoverFilm\",\n      children: allType.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DiscoverCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [e.title, \" \", e.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgUrl + e.poster_path,\n            alt: \"Movie Poster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(Discover, \"Rs2KR97swbh6CvXgsKI4hyz9BWE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Discover;\nexport default Discover;\nvar _c;\n$RefreshReg$(_c, \"Discover\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","getFilter","getFilterTV","getDiscoverMovie","getDiscoverTV","Discover","dispatch","discoverFilm","state","discoverTV","stateDiscoverFilm","setDiscoverFilm","stateDiscoverTV","setDiscoverTV","allType","setAllType","imgUrl","filmOrTv","setFilmOrTv","activeGenre","setActiveGenre","stateActiveFilter","setActiveFilter","isSuccess","data","results","concat","handleClick","e","target","id","map","i","title","name","poster_path"],"sources":["/Applications/MAMP/htdocs/Cloneflix/src/components/Discover/discover.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from \"../../API/getFilterMovie\";\nimport { getFilterTV } from \"../../API/getFilterTv\";\nimport { getDiscoverMovie } from \"../../store/film/discoverSlice\";\nimport { getDiscoverTV } from \"../../store/serie/discoverSlice\";\nimport './discover.css';\n\nfunction Discover() {\n    const dispatch = useDispatch();\n    const { discoverFilm } = useSelector((state) => state);\n    const { discoverTV } = useSelector((state) => state);\n    const [stateDiscoverFilm, setDiscoverFilm] = useState([]);\n    const [stateDiscoverTV, setDiscoverTV] = useState([]);\n    const [allType, setAllType] = useState([])\n    const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n\n    //Variables pour les filtres\n    const [filmOrTv, setFilmOrTv] = useState([]);\n    const [activeGenre, setActiveGenre] = useState(0);\n    const [stateActiveFilter, setActiveFilter] = useState([]);\n\n    useEffect(() => {\n        dispatch(getDiscoverMovie());\n        dispatch(getDiscoverTV());\n        dispatch(getFilter());\n        dispatch(getFilterTV())\n    }, [])\n\n    useEffect(() => {\n        if (discoverFilm.isSuccess & discoverTV.isSuccess) {\n            setDiscoverFilm(discoverFilm.data.results);\n            setDiscoverTV(discoverTV.data.results)\n            const concat = [].concat(stateDiscoverFilm, stateDiscoverTV)\n            setAllType(concat);\n        }\n    }, [discoverFilm, discoverTV])\n\n    //Configuration des checkbox Filtre\n    function handleClick(e) {\n        if (e.target.id === \"film\") {\n            setFilmOrTv()\n        }\n    }\n\n    return (\n        <div className=\"discoverContainer\">\n            <div className=\"FilterBox\">\n                <button id=\"film\" onClick={handleClick}>Film</button>\n                <button id=\"tv\" onClick={handleClick}>SÃ©rie</button>\n            </div>\n            <div className=\"DiscoverFilm\">\n                {allType.map((e, i) => {\n                    return (\n                        <div key={i} className=\"DiscoverCard\">\n                            <h2>{e.title} {e.name}</h2>\n                            <img src={imgUrl + e.poster_path} alt=\"Movie Poster\" />\n                        </div>\n                    )\n                })}\n            </div>\n        </div >\n    )\n}\n\nexport default Discover"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,OAAO,gBAAgB;AAAC;AAExB,SAASC,QAAQ,GAAG;EAAA;EAChB,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAM;IAAEQ;EAAa,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAAC;EACtD,MAAM;IAAEC;EAAW,CAAC,GAAGT,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAAC;EACpD,MAAM,CAACE,iBAAiB,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACzD,MAAM,CAACc,eAAe,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACrD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMkB,MAAM,GAAG,iCAAiC;;EAEhD;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACuB,iBAAiB,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAEzDD,SAAS,CAAC,MAAM;IACZS,QAAQ,CAACH,gBAAgB,EAAE,CAAC;IAC5BG,QAAQ,CAACF,aAAa,EAAE,CAAC;IACzBE,QAAQ,CAACL,SAAS,EAAE,CAAC;IACrBK,QAAQ,CAACJ,WAAW,EAAE,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAENL,SAAS,CAAC,MAAM;IACZ,IAAIU,YAAY,CAACgB,SAAS,GAAGd,UAAU,CAACc,SAAS,EAAE;MAC/CZ,eAAe,CAACJ,YAAY,CAACiB,IAAI,CAACC,OAAO,CAAC;MAC1CZ,aAAa,CAACJ,UAAU,CAACe,IAAI,CAACC,OAAO,CAAC;MACtC,MAAMC,MAAM,GAAG,EAAE,CAACA,MAAM,CAAChB,iBAAiB,EAAEE,eAAe,CAAC;MAC5DG,UAAU,CAACW,MAAM,CAAC;IACtB;EACJ,CAAC,EAAE,CAACnB,YAAY,EAAEE,UAAU,CAAC,CAAC;;EAE9B;EACA,SAASkB,WAAW,CAACC,CAAC,EAAE;IACpB,IAAIA,CAAC,CAACC,MAAM,CAACC,EAAE,KAAK,MAAM,EAAE;MACxBZ,WAAW,EAAE;IACjB;EACJ;EAEA,oBACI;IAAK,SAAS,EAAC,mBAAmB;IAAA,wBAC9B;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB;QAAQ,EAAE,EAAC,MAAM;QAAC,OAAO,EAAES,WAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eACrD;QAAQ,EAAE,EAAC,IAAI;QAAC,OAAO,EAAEA,WAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe;IAAA;MAAA;MAAA;MAAA;IAAA,QAClD,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,UACxBb,OAAO,CAACiB,GAAG,CAAC,CAACH,CAAC,EAAEI,CAAC,KAAK;QACnB,oBACI;UAAa,SAAS,EAAC,cAAc;UAAA,wBACjC;YAAA,WAAKJ,CAAC,CAACK,KAAK,OAAGL,CAAC,CAACM,IAAI;UAAA;YAAA;YAAA;YAAA;UAAA,QAAM,eAC3B;YAAK,GAAG,EAAElB,MAAM,GAAGY,CAAC,CAACO,WAAY;YAAC,GAAG,EAAC;UAAc;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA,GAFjDH,CAAC;UAAA;UAAA;UAAA;QAAA,QAGL;MAEd,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEf;AAAC,GAvDQ3B,QAAQ;EAAA,QACIN,WAAW,EACHC,WAAW,EACbA,WAAW;AAAA;AAAA,KAH7BK,QAAQ;AAyDjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}