{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Cloneflix/src/components/Discover/discover.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from \"../../API/getFilterMovie\";\nimport { getFilterTV } from \"../../API/getFilterTv\";\nimport { getDiscoverMovie } from \"../../store/film/discoverSlice\";\nimport { getDiscoverTV } from \"../../store/serie/discoverSlice\";\nimport './discover.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Discover() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    discoverFilm\n  } = useSelector(state => state);\n  const {\n    discoverTV\n  } = useSelector(state => state);\n  const {\n    genreMovie\n  } = useSelector(state => state);\n  const {\n    genreTv\n  } = useSelector(state => state);\n  const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n  const [data, setData] = useState([]);\n  const [filter, setFilter] = useState([]);\n  const [store, setStore] = useState([]);\n  useEffect(() => {\n    dispatch(getDiscoverMovie());\n    dispatch(getDiscoverTV());\n    dispatch(getFilter());\n    dispatch(getFilterTV());\n  }, []);\n  useEffect(() => {\n    if (discoverFilm.isSuccess && discoverTV.isSuccess && data.length <= 0) {\n      let array = [].concat(discoverFilm.data.results, discoverTV.data.results);\n      setData(array);\n      setStore(array);\n    }\n    if (genreMovie.isSuccess && genreTv.isSuccess && filter.length <= 0) {\n      let filter = [].concat(genreTv.data.genres, genreMovie.data.genres);\n      setFilter(filter);\n    }\n  }, [discoverFilm, discoverTV]);\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n\n  //Configuration des checkbox Filtre\n  async function handleClick(e) {\n    if (e.target.value === \"film\") {\n      // setData(data.filter((datas) => datas.title))\n      // setFilter(genreMovie.data.genres)\n      const results = await axios.get(`https://api.themoviedb.org/3/discover/movie`, {\n        params: {\n          api_key: process.env.REACT_APP_API_KEY,\n          page: 40\n        }\n      });\n      console.log(results);\n    } else if (e.target.value === \"tv\") {\n      setData(data.filter(datas => datas.name));\n      setFilter(genreTv.data.genres);\n    } else {\n      setData(data);\n    }\n  }\n  function handleGenre(e) {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"discoverContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainFilterBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        value: \"film\",\n        onClick: handleClick,\n        children: \"Film\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        value: \"tv\",\n        onClick: handleClick,\n        children: \"S\\xE9rie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FilterBox\",\n        children: filter.map((e, i) => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleGenre,\n            id: e.id,\n            children: e.name\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiscoverFilm\",\n      children: data.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DiscoverCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [e.title, \" \", e.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgUrl + e.poster_path,\n            alt: \"Movie Poster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(Discover, \"zKUO1KU+i//obLLEVSfisrPU8OE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Discover;\nexport default Discover;\nvar _c;\n$RefreshReg$(_c, \"Discover\");","map":{"version":3,"names":["React","useEffect","useState","axios","useDispatch","useSelector","getFilter","getFilterTV","getDiscoverMovie","getDiscoverTV","Discover","dispatch","discoverFilm","state","discoverTV","genreMovie","genreTv","imgUrl","data","setData","filter","setFilter","store","setStore","isSuccess","length","array","concat","results","genres","console","log","handleClick","e","target","value","get","params","api_key","process","env","REACT_APP_API_KEY","page","datas","name","handleGenre","map","i","id","title","poster_path"],"sources":["/Applications/MAMP/htdocs/Cloneflix/src/components/Discover/discover.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from \"../../API/getFilterMovie\";\nimport { getFilterTV } from \"../../API/getFilterTv\";\nimport { getDiscoverMovie } from \"../../store/film/discoverSlice\";\nimport { getDiscoverTV } from \"../../store/serie/discoverSlice\";\nimport './discover.css';\n\nfunction Discover() {\n    const dispatch = useDispatch();\n    const { discoverFilm } = useSelector((state) => state);\n    const { discoverTV } = useSelector((state) => state);\n    const { genreMovie } = useSelector((state) => state)\n    const { genreTv } = useSelector((state) => state)\n    const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n    const [data, setData] = useState([]);\n    const [filter, setFilter] = useState([]);\n    const [store, setStore] = useState([])\n\n    useEffect(() => {\n        dispatch(getDiscoverMovie());\n        dispatch(getDiscoverTV());\n        dispatch(getFilter());\n        dispatch(getFilterTV());\n    }, [])\n\n    useEffect(() => {\n        if (discoverFilm.isSuccess && discoverTV.isSuccess && data.length <= 0) {\n            let array = [].concat(discoverFilm.data.results, discoverTV.data.results)\n            setData(array)\n            setStore(array)\n        }\n        if (genreMovie.isSuccess && genreTv.isSuccess && filter.length <= 0) {\n            let filter = [].concat(genreTv.data.genres, genreMovie.data.genres)\n            setFilter(filter)\n        }\n    }, [discoverFilm, discoverTV])\n\n    useEffect(() => {\n        console.log(data)\n    }, [data])\n\n    //Configuration des checkbox Filtre\n    async function handleClick(e) {\n        if (e.target.value === \"film\") {\n            // setData(data.filter((datas) => datas.title))\n            // setFilter(genreMovie.data.genres)\n            const results = await axios.get(`https://api.themoviedb.org/3/discover/movie`, {\n                params: {\n                    api_key: process.env.REACT_APP_API_KEY,\n                    page: 40\n                }\n            })\n            console.log(results)\n        } else if (e.target.value === \"tv\") {\n            setData(data.filter((datas) => datas.name))\n            setFilter(genreTv.data.genres)\n        } else {\n            setData(data)\n        }\n    }\n    function handleGenre(e) {\n\n    }\n\n    return (\n        <div className=\"discoverContainer\">\n            <div className=\"mainFilterBox\">\n                <button value=\"film\" onClick={handleClick}>Film</button>\n                <button value=\"tv\" onClick={handleClick}>SÃ©rie</button>\n                <div className=\"FilterBox\">\n                    {filter.map((e, i) => {\n                        return (\n                            <button key={i} onClick={handleGenre} id={e.id}>{e.name}</button>\n                        )\n                    })}\n                </div>\n            </div>\n            <div className=\"DiscoverFilm\">\n                {data.map((e, i) => {\n                    return (\n                        <div key={i} className=\"DiscoverCard\">\n                            <h2>{e.title} {e.name}</h2>\n                            <img src={imgUrl + e.poster_path} alt=\"Movie Poster\" />\n                        </div>\n                    )\n                })}\n            </div>\n        </div >\n    )\n}\n\nexport default Discover"],"mappings":"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"},"metadata":{},"sourceType":"module"}