{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Cloneflix/src/components/ListSerie/listSerie.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './listSerie.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDiscoverTV } from \"../../store/serie/discoverSlice\";\nimport { getFilterTV } from \"../../API/getFilterTv\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListSerie() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    discoverTV\n  } = useSelector(state => state);\n  const {\n    genreTv\n  } = useSelector(state => state);\n  const [stateDiscoverTV, setDiscoverTV] = useState([]);\n  const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n\n  //Variables pour les filtres\n  const [activeGenre, setActiveGenre] = useState(0);\n  const [stateActiveFilter, setActiveFilter] = useState([]);\n  const [filter, setFilter] = useState([]);\n\n  // Dispatch Movie et Serie\n  useEffect(() => {\n    dispatch(getDiscoverTV());\n    dispatch(getFilterTV());\n  }, []);\n\n  // On vérifie que les données de l'API on été transmise\n  useEffect(() => {\n    if (discoverTV.isSuccess) {\n      setDiscoverTV(discoverTV.data.results);\n      setFilter(discoverTV.data.results);\n    }\n  }, [discoverTV]);\n  useEffect(() => {\n    if (genreTv.isSuccess) {\n      setActiveFilter(genreTv.data.genres);\n    }\n  }, [genreTv]);\n  useEffect(() => {\n    if (activeGenre === 0) {\n      setFilter(stateDiscoverTV);\n      return;\n    } else {\n      setFilter(stateDiscoverTV.filter(movie => movie.genre_ids.includes(activeGenre)));\n    }\n  }, [activeGenre]);\n\n  //Configuration des checkbox Filtre\n  function handleClick(e) {\n    setActiveGenre(Number(e.target.id));\n  }\n  async function handleDetails(e) {\n    const results = await axios.get(`https://api.themoviedb.org/3/movie/${e.target.id}`, {\n      params: {\n        api_key: process.env.REACT_APP_API_KEY\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"discoverContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      animate: {\n        y: 100\n      },\n      className: \"FilterBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"0\",\n        onClick: handleClick,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), stateActiveFilter.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          id: e.id,\n          onClick: handleClick,\n          children: e.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"film\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiscoverFilm\",\n      children: filter.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DiscoverCard\",\n          id: e.id,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"\",\n            onClick: handleDetails,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: e.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imgUrl + e.poster_path,\n              alt: \"Movie Poster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(ListSerie, \"8yl39OMlNj8E4dvJZcpaD+Y2gEM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = ListSerie;\nexport default ListSerie;\nvar _c;\n$RefreshReg$(_c, \"ListSerie\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","getDiscoverTV","getFilterTV","axios","ListSerie","dispatch","discoverTV","state","genreTv","stateDiscoverTV","setDiscoverTV","imgUrl","activeGenre","setActiveGenre","stateActiveFilter","setActiveFilter","filter","setFilter","isSuccess","data","results","genres","movie","genre_ids","includes","handleClick","e","Number","target","id","handleDetails","get","params","api_key","process","env","REACT_APP_API_KEY","y","map","i","name","poster_path"],"sources":["/Applications/MAMP/htdocs/Cloneflix/src/components/ListSerie/listSerie.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './listSerie.css'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDiscoverTV } from \"../../store/serie/discoverSlice\";\nimport { getFilterTV } from \"../../API/getFilterTv\";\nimport axios from \"axios\";\n\nfunction ListSerie() {\n    const dispatch = useDispatch();\n    const { discoverTV } = useSelector((state) => state)\n    const { genreTv } = useSelector((state) => state);\n    const [stateDiscoverTV, setDiscoverTV] = useState([]);\n    const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n\n    //Variables pour les filtres\n    const [activeGenre, setActiveGenre] = useState(0);\n    const [stateActiveFilter, setActiveFilter] = useState([]);\n    const [filter, setFilter] = useState([]);\n\n    // Dispatch Movie et Serie\n    useEffect(() => {\n        dispatch(getDiscoverTV())\n        dispatch(getFilterTV())\n    }, []);\n\n    // On vérifie que les données de l'API on été transmise\n    useEffect(() => {\n        if (discoverTV.isSuccess) {\n            setDiscoverTV(discoverTV.data.results)\n            setFilter(discoverTV.data.results)\n        }\n    }, [discoverTV])\n\n    useEffect(() => {\n        if (genreTv.isSuccess) {\n            setActiveFilter(genreTv.data.genres);\n        }\n    }, [genreTv])\n\n    useEffect(() => {\n        if (activeGenre === 0) {\n            setFilter(stateDiscoverTV)\n            return;\n        } else {\n            setFilter(stateDiscoverTV.filter((movie) => (movie.genre_ids.includes(activeGenre))))\n        }\n    }, [activeGenre])\n\n    //Configuration des checkbox Filtre\n    function handleClick(e) {\n        setActiveGenre(Number(e.target.id));\n    }\n\n    async function handleDetails(e) {\n        const results = await axios.get(`https://api.themoviedb.org/3/movie/${e.target.id}`, {\n            params: {\n                api_key: process.env.REACT_APP_API_KEY,\n            }\n        })\n    }\n\n    return (\n        <div className=\"discoverContainer\">\n            <div animate={{ y: 100 }} className=\"FilterBox\">\n                <button id=\"0\" onClick={handleClick}>All</button>\n                {stateActiveFilter.map((e, i) => {\n                    return (\n                        <button key={i} id={e.id} onClick={handleClick}>{e.name}</button>\n                    )\n                })}\n            </div>\n            <h1>film</h1>\n\n            <div className=\"DiscoverFilm\" >\n                {filter.map((e, i) => {\n                    return (\n                        <div className=\"DiscoverCard\" key={i} id={e.id}>\n                            <a href=\"\" onClick={handleDetails}>\n                                <h2>{e.name}</h2>\n                                <img src={imgUrl + e.poster_path} alt=\"Movie Poster\" />\n                            </a>\n                        </div>\n\n                    )\n                })}\n            </div >\n        </div >\n    )\n}\n\nexport default ListSerie\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}