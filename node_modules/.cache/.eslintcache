[{"/Applications/MAMP/htdocs/Cloneflix/src/index.js":"1","/Applications/MAMP/htdocs/Cloneflix/src/App.js":"2","/Applications/MAMP/htdocs/Cloneflix/src/reportWebVitals.js":"3","/Applications/MAMP/htdocs/Cloneflix/src/store/store.jsx":"4","/Applications/MAMP/htdocs/Cloneflix/src/components/Navigation/nav.jsx":"5","/Applications/MAMP/htdocs/Cloneflix/src/components/Dashboard/dashboard.jsx":"6","/Applications/MAMP/htdocs/Cloneflix/src/components/ListSerie/listSerie.jsx":"7","/Applications/MAMP/htdocs/Cloneflix/src/components/Favoris/favoris.jsx":"8","/Applications/MAMP/htdocs/Cloneflix/src/components/ListFilm/listFilm.jsx":"9","/Applications/MAMP/htdocs/Cloneflix/src/store/film/filmSlice.jsx":"10","/Applications/MAMP/htdocs/Cloneflix/src/store/serie/serieSlice.jsx":"11","/Applications/MAMP/htdocs/Cloneflix/src/components/Discover/discover.jsx":"12","/Applications/MAMP/htdocs/Cloneflix/src/API/getFilterTv.jsx":"13","/Applications/MAMP/htdocs/Cloneflix/src/API/getFilterMovie.jsx":"14","/Applications/MAMP/htdocs/Cloneflix/src/store/film/discoverSlice.jsx":"15","/Applications/MAMP/htdocs/Cloneflix/src/store/serie/discoverSlice.jsx":"16","/Applications/MAMP/htdocs/Cloneflix/src/store/favoris/favorisSlice.js":"17"},{"size":657,"mtime":1666602949443,"results":"18","hashOfConfig":"19"},{"size":969,"mtime":1666859074898,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1666598936454,"results":"21","hashOfConfig":"19"},{"size":750,"mtime":1666859074900,"results":"22","hashOfConfig":"19"},{"size":731,"mtime":1666859074899,"results":"23","hashOfConfig":"19"},{"size":2163,"mtime":1666859074898,"results":"24","hashOfConfig":"19"},{"size":2914,"mtime":1666859427281,"results":"25","hashOfConfig":"19"},{"size":530,"mtime":1666859074898,"results":"26","hashOfConfig":"19"},{"size":3197,"mtime":1666859074899,"results":"27","hashOfConfig":"19"},{"size":1240,"mtime":1666859074900,"results":"28","hashOfConfig":"19"},{"size":1228,"mtime":1666687465887,"results":"29","hashOfConfig":"19"},{"size":3446,"mtime":1666859074898,"results":"30","hashOfConfig":"19"},{"size":1264,"mtime":1666859074897,"results":"31","hashOfConfig":"19"},{"size":1254,"mtime":1666859074897,"results":"32","hashOfConfig":"19"},{"size":1322,"mtime":1666859074899,"results":"33","hashOfConfig":"19"},{"size":1297,"mtime":1666859074900,"results":"34","hashOfConfig":"19"},{"size":456,"mtime":1666859074899,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"16dzt5l",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/Applications/MAMP/htdocs/Cloneflix/src/index.js",[],[],[],"/Applications/MAMP/htdocs/Cloneflix/src/App.js",[],[],[],"/Applications/MAMP/htdocs/Cloneflix/src/reportWebVitals.js",[],[],"/Applications/MAMP/htdocs/Cloneflix/src/store/store.jsx",[],[],"/Applications/MAMP/htdocs/Cloneflix/src/components/Navigation/nav.jsx",[],[],"/Applications/MAMP/htdocs/Cloneflix/src/components/Dashboard/dashboard.jsx",["93","94","95"],[],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPopularMovie } from \"../../store/film/filmSlice\";\nimport { getPopularTv } from \"../../store/serie/serieSlice\";\nimport './dashboard.css';\n\n\nfunction Dashboard() {\n\n    const dispatch = useDispatch();\n    const { serie } = useSelector((state) => state)\n    const { film } = useSelector((state) => state)\n    const [popularMovie, setPopularMovie] = useState([]);\n    const [popularTv, setPopularTv] = useState([]);\n    const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n\n    // Dispatch Movie et Serie\n    useEffect(() => {\n        dispatch(getPopularMovie())\n        dispatch(getPopularTv())\n    }, []);\n\n    // On vérifie que les données de l'API on été transmise\n    useEffect(() => {\n        if (film.isSuccess) {\n            setPopularMovie(film.data.results)\n        }\n    }, [film])\n\n    useEffect(() => {\n        if (serie.isSuccess) {\n            setPopularTv(serie.data.results)\n        }\n    }, [serie])\n\n    return (\n        <div className=\"dashContainer\">\n            <h1>Top film</h1>\n            <a href=\"\">\n                <div className=\"TopRanking\" >\n                    {popularMovie.map((e, i) => {\n                        return (\n                            <div key={i} className=\"RankingCard\">\n                                <h2>{e.title}</h2>\n                                <img src={imgUrl + e.poster_path} alt=\"Movie Poster\" />\n                            </div>\n                        )\n                    })}\n                </div >\n            </a>\n            <h2>Top série</h2>\n            <a href=\"\">\n                <div className=\"TopRanking\" >\n                    {popularTv.map((e, i) => {\n                        return (\n                            <div key={i} className=\"RankingCard\">\n                                <h2>{e.name}</h2>\n                                <img src={imgUrl + e.poster_path} alt=\"Movie Poster\" />\n                            </div>\n                        )\n                    })}\n                </div >\n            </a>\n        </div>\n    )\n}\n\nexport default Dashboard","/Applications/MAMP/htdocs/Cloneflix/src/components/ListSerie/listSerie.jsx",["96","97","98","99"],[],"/Applications/MAMP/htdocs/Cloneflix/src/components/Favoris/favoris.jsx",["100","101","102"],[],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFavori } from \"../../store/favoris/favorisSlice\";\nimport './favoris.css'\n\n\nfunction Favoris() {\n    const dispatch = useDispatch();\n    const { favori } = useSelector((state) => state)\n    const [displayFav, setDisplayFav] = useState([])\n\n    useEffect(() => {\n        dispatch(getFavori());\n        console.log(displayFav)\n    }, [])\n\n    return (\n        <div>\n\n        </div>\n    )\n}\n\nexport default Favoris","/Applications/MAMP/htdocs/Cloneflix/src/components/ListFilm/listFilm.jsx",["103","104","105","106"],[],"import React, { useEffect, useState } from \"react\";\nimport './listFilm.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDiscoverMovie } from \"../../store/film/discoverSlice\";\nimport { motion } from \"framer-motion\";\nimport { getFilter } from \"../../API/getFilterMovie\";\nimport axios from \"axios\";\nimport { addFavori } from \"../../store/favoris/favorisSlice\";\n\nfunction ListFilm() {\n    const dispatch = useDispatch();\n    const { discoverFilm } = useSelector((state) => state)\n    const { genreMovie } = useSelector((state) => state);\n    const [stateDiscoverFilm, setDiscoverFilm] = useState([]);\n    const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n\n    //Variables pour les filtres\n    const [activeGenre, setActiveGenre] = useState(0);\n    const [stateActiveFilter, setActiveFilter] = useState([]);\n    const [filter, setFilter] = useState([]);\n\n    // Dispatch Movie et Serie\n    useEffect(() => {\n        dispatch(getDiscoverMovie())\n        dispatch(getFilter())\n    }, []);\n\n    // On vérifie que les données de l'API on été transmise\n    useEffect(() => {\n        if (discoverFilm.isSuccess) {\n            setDiscoverFilm(discoverFilm.data.results)\n            setFilter(discoverFilm.data.results)\n        }\n    }, [discoverFilm])\n\n    useEffect(() => {\n        if (genreMovie.isSuccess) {\n            setActiveFilter(genreMovie.data.genres);\n        }\n    }, [genreMovie])\n\n    useEffect(() => {\n        if (activeGenre === 0) {\n            setFilter(stateDiscoverFilm)\n            return;\n        } else {\n            setFilter(stateDiscoverFilm.filter((movie) => (movie.genre_ids.includes(activeGenre))))\n        }\n    }, [activeGenre])\n\n    //Configuration des checkbox Filtre\n    function handleClick(e) {\n        setActiveGenre(Number(e.target.id));\n    }\n\n    async function handleSave(e) {\n        e.preventDefault()\n        const results = await axios.get(`https://api.themoviedb.org/3/movie/${e.target.id}`, {\n            params: {\n                api_key: process.env.REACT_APP_API_KEY,\n            }\n        })\n        console.log(results.data)\n        console.log(dispatch(addFavori(results.data)))\n    }\n\n    return (\n        <div className=\"discoverContainer\">\n            <div className=\"FilterBox\">\n                <button id=\"0\" onClick={handleClick}>All</button>\n                {stateActiveFilter.map((e, i) => {\n                    return (\n                        <button key={i} id={e.id} onClick={handleClick}>{e.name}</button>\n                    )\n                })}\n            </div>\n            <h1>film</h1>\n            <a href=\"\">\n                <div className=\"DiscoverFilm\" >\n                    {filter.map((e, i) => {\n                        return (\n                            <div key={i} className=\"DiscoverCard\">\n                                <h2>{e.title}</h2>\n                                <img src={imgUrl + e.poster_path} alt=\"Movie Poster\" />\n                                <button id={e.id} onClick={handleSave}>⭐️</button>\n                            </div>\n                        )\n                    })}\n                </div >\n            </a>\n        </div>\n    )\n}\n\nexport default ListFilm\n\n\n\n\n","/Applications/MAMP/htdocs/Cloneflix/src/store/film/filmSlice.jsx",[],[],"/Applications/MAMP/htdocs/Cloneflix/src/store/serie/serieSlice.jsx",[],[],"/Applications/MAMP/htdocs/Cloneflix/src/components/Discover/discover.jsx",["107","108"],[],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from \"../../API/getFilterMovie\";\nimport { getFilterTV } from \"../../API/getFilterTv\";\nimport { getDiscoverMovie } from \"../../store/film/discoverSlice\";\nimport { getDiscoverTV } from \"../../store/serie/discoverSlice\";\nimport './discover.css';\n\nfunction Discover() {\n    const dispatch = useDispatch();\n    const { discoverFilm } = useSelector((state) => state);\n    const { discoverTV } = useSelector((state) => state);\n    const { genreMovie } = useSelector((state) => state)\n    const { genreTv } = useSelector((state) => state)\n    const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n    const [data, setData] = useState([]);\n    const [filter, setFilter] = useState([]);\n\n    useEffect(() => {\n        dispatch(getDiscoverMovie());\n        dispatch(getDiscoverTV());\n        dispatch(getFilter());\n        dispatch(getFilterTV());\n    }, [])\n\n    useEffect(() => {\n        if (discoverFilm.isSuccess && discoverTV.isSuccess && data.length <= 0) {\n            let array = [].concat(discoverFilm.data.results, discoverTV.data.results)\n            setData(array)\n        }\n        if (genreMovie.isSuccess && genreTv.isSuccess && filter.length <= 0) {\n            let filter = [].concat(genreTv.data.genres, genreMovie.data.genres)\n            setFilter(filter)\n        }\n    }, [discoverFilm, discoverTV])\n\n    useEffect(() => {\n        console.log(data)\n    }, [data])\n\n    //Configuration des checkbox Filtre\n    async function handleClick(e) {\n        if (e.target.value === \"film\") {\n            const results = await axios.get(`https://api.themoviedb.org/3/discover/movie`, {\n                params: {\n                    api_key: process.env.REACT_APP_API_KEY,\n                    page: 40\n                }\n            })\n            setData(results.data.results)\n            setFilter(genreMovie.data.genres)\n        } else if (e.target.value === \"tv\") {\n            const results = await axios.get(`https://api.themoviedb.org/3/discover/tv`, {\n                params: {\n                    api_key: process.env.REACT_APP_API_KEY,\n                    page: 40\n                }\n            })\n            setData(results.data.results)\n            setFilter(genreTv.data.genres)\n        } else {\n            setData(data)\n        }\n    }\n    function handleGenre(e) {\n\n    }\n\n    return (\n        <div className=\"discoverContainer\">\n            <div className=\"mainFilterBox\">\n                <button value=\"film\" onClick={handleClick}>Film</button>\n                <button value=\"tv\" onClick={handleClick}>Série</button>\n                <div className=\"FilterBox\">\n                    {filter.map((e, i) => {\n                        return (\n                            <button key={i} onClick={handleGenre} id={e.id}>{e.name}</button>\n                        )\n                    })}\n                </div>\n            </div>\n            <div className=\"DiscoverFilm\">\n                {data.map((e, i) => {\n                    return (\n                        <div key={i} className=\"DiscoverCard\">\n                            <h2>{e.title} {e.name}</h2>\n                            <img src={imgUrl + e.poster_path} alt=\"Movie Poster\" />\n                        </div>\n                    )\n                })}\n            </div>\n        </div >\n    )\n}\n\nexport default Discover","/Applications/MAMP/htdocs/Cloneflix/src/API/getFilterTv.jsx",[],[],"/Applications/MAMP/htdocs/Cloneflix/src/API/getFilterMovie.jsx",[],[],"/Applications/MAMP/htdocs/Cloneflix/src/store/film/discoverSlice.jsx",[],[],"/Applications/MAMP/htdocs/Cloneflix/src/store/serie/discoverSlice.jsx",[],[],"/Applications/MAMP/htdocs/Cloneflix/src/store/favoris/favorisSlice.js",[],[],{"ruleId":"109","severity":1,"message":"110","line":21,"column":8,"nodeType":"111","endLine":21,"endColumn":10,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":39,"column":13,"nodeType":"115","endLine":39,"endColumn":24},{"ruleId":"113","severity":1,"message":"114","line":52,"column":13,"nodeType":"115","endLine":52,"endColumn":24},{"ruleId":"109","severity":1,"message":"110","line":24,"column":8,"nodeType":"111","endLine":24,"endColumn":10,"suggestions":"116"},{"ruleId":"109","severity":1,"message":"117","line":47,"column":8,"nodeType":"111","endLine":47,"endColumn":21,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":55,"column":15,"nodeType":"121","messageId":"122","endLine":55,"endColumn":22},{"ruleId":"113","severity":1,"message":"114","line":78,"column":29,"nodeType":"115","endLine":78,"endColumn":64},{"ruleId":"119","severity":1,"message":"123","line":9,"column":13,"nodeType":"121","messageId":"122","endLine":9,"endColumn":19},{"ruleId":"119","severity":1,"message":"124","line":10,"column":24,"nodeType":"121","messageId":"122","endLine":10,"endColumn":37},{"ruleId":"109","severity":1,"message":"125","line":15,"column":8,"nodeType":"111","endLine":15,"endColumn":10,"suggestions":"126"},{"ruleId":"119","severity":1,"message":"127","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":26,"column":8,"nodeType":"111","endLine":26,"endColumn":10,"suggestions":"128"},{"ruleId":"109","severity":1,"message":"129","line":49,"column":8,"nodeType":"111","endLine":49,"endColumn":21,"suggestions":"130"},{"ruleId":"113","severity":1,"message":"114","line":78,"column":13,"nodeType":"115","endLine":78,"endColumn":24},{"ruleId":"109","severity":1,"message":"110","line":25,"column":8,"nodeType":"111","endLine":25,"endColumn":10,"suggestions":"131"},{"ruleId":"109","severity":1,"message":"132","line":36,"column":8,"nodeType":"111","endLine":36,"endColumn":34,"suggestions":"133"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["134"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["135"],"React Hook useEffect has a missing dependency: 'stateDiscoverTV'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilter' needs the current value of 'stateDiscoverTV'.",["136"],"no-unused-vars","'results' is assigned a value but never used.","Identifier","unusedVar","'favori' is assigned a value but never used.","'setDisplayFav' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'displayFav'. Either include them or remove the dependency array.",["137"],"'motion' is defined but never used.",["138"],"React Hook useEffect has a missing dependency: 'stateDiscoverFilm'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilter' needs the current value of 'stateDiscoverFilm'.",["139"],["140"],"React Hook useEffect has missing dependencies: 'data.length', 'filter.length', 'genreMovie.data.genres', 'genreMovie.isSuccess', 'genreTv.data.genres', and 'genreTv.isSuccess'. Either include them or remove the dependency array.",["141"],{"desc":"142","fix":"143"},{"desc":"142","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"142","fix":"149"},{"desc":"150","fix":"151"},{"desc":"142","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [dispatch]",{"range":"155","text":"156"},{"range":"157","text":"156"},"Update the dependencies array to be: [activeGenre, stateDiscoverTV]",{"range":"158","text":"159"},"Update the dependencies array to be: [dispatch, displayFav]",{"range":"160","text":"161"},{"range":"162","text":"156"},"Update the dependencies array to be: [activeGenre, stateDiscoverFilm]",{"range":"163","text":"164"},{"range":"165","text":"156"},"Update the dependencies array to be: [data.length, discoverFilm, discoverTV, filter.length, genreMovie.data.genres, genreMovie.isSuccess, genreTv.data.genres, genreTv.isSuccess]",{"range":"166","text":"167"},[716,718],"[dispatch]",[888,890],[1522,1535],"[activeGenre, stateDiscoverTV]",[451,453],"[dispatch, displayFav]",[1002,1004],[1659,1672],"[activeGenre, stateDiscoverFilm]",[996,998],[1434,1460],"[data.length, discoverFilm, discoverTV, filter.length, genreMovie.data.genres, genreMovie.isSuccess, genreTv.data.genres, genreTv.isSuccess]"]